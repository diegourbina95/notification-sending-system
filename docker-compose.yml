# docker-compose.yml
version: "3.8"

services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./scripts/rabbitmq-init.sh:/docker-entrypoint-initdb.d/rabbitmq-init.sh:ro
    networks:
      - app-network
  notification-publisher:
    build:
      context: ./notification-publisher
      dockerfile: Dockerfile
    ports:
      - ${PORT}:5000
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app-network
    environment:
      PORT: ${PORT}
      ENVIRONMENT: ${ENVIRONMENT}
      BD_CORE_HOST: ${BD_CORE_HOST}
      BD_CORE_PORT: ${BD_CORE_PORT}
      BD_CORE_DATABASE: ${BD_CORE_DATABASE}
      BD_CORE_USERNAME: ${BD_CORE_USERNAME}
      BD_CORE_PASSWORD: ${BD_CORE_PASSWORD}
      MONGO_DB_URI: ${MONGO_DB_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      RABBIT_MQ_URI: ${RABBIT_MQ_URI}
      RABBIT_MQ_QUEUE: ${RABBIT_MQ_QUEUE}
      BATCH_SIZE: ${BATCH_SIZE}
  notification-consumer:
    build:
      context: ./notification-consumer
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app-network
    deploy:
      replicas: 1
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      BD_CORE_HOST: ${BD_CORE_HOST}
      BD_CORE_PORT: ${BD_CORE_PORT}
      BD_CORE_DATABASE: ${BD_CORE_DATABASE}
      BD_CORE_USERNAME: ${BD_CORE_USERNAME}
      BD_CORE_PASSWORD: ${BD_CORE_PASSWORD}
      MONGO_DB_URI: ${MONGO_DB_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      RABBIT_MQ_URI: ${RABBIT_MQ_URI}
      RABBIT_MQ_QUEUE: ${RABBIT_MQ_QUEUE}
      SOLUCIONES_URL_BASE: ${SOLUCIONES_URL_BASE}
      SOLUCIONES_USERNAME: ${SOLUCIONES_USERNAME}
      SOLUCIONES_PASSWORD: ${SOLUCIONES_PASSWORD}
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  rabbitmq_data:
    driver: local
networks:
  app-network:
    driver: bridge
